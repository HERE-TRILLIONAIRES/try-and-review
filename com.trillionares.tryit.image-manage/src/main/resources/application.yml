spring:
  application:
    name: image-manage-service
  config:
    import: configserver:http://${CONFIG_DNS_NAME}
  datasource:
    url: ${DB_URL}
    username: ${DB_PRODUCT_USERNAME}
    password: ${DB_PRODUCT_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      show-sql: true
      format-sql: true
      use_sql_comments: true
  # Image File Size
  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB
  kafka:
    bootstrap-servers: ${KAFKA_DNS_URL}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer

# S3
cloud:
  aws:
    s3:
      bucket: ${AWS_S3_BUCKET_NAME}
    stack:
        auto: false
    region:
      static: ${AWS_S3_REGION}
      auto: false
    credentials:
      access-key: ${AWS_S3_ACCESS_KEY}
      secret-key: ${AWS_S3_SECRET_KEY}


server:
  port: 19070

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DNS_NAME}/eureka
  instance:
    hostname: ${IMAGE_MANAGE_DNS_NAME}
    nonSecurePort: 80
    nonSecurePortEnabled: true

openapi:
  service:
    url: ${GATEWAY_DNS_NAME}