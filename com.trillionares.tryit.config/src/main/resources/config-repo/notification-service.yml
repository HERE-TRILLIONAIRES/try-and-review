spring:
  datasource:
    url: ${DB_URL}
    username: ${DB_NOTIFICATION_USERNAME}
    password: ${DB_NOTIFICATION_PASSWORD}
    driver-class-name: org.postgresql.Driver

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        spring.json.trusted.packages: '*'
      group-id: notification-service-group
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    group:
      notification-service: "notification-service-group"
    admin:
      auto-create-topics: false # 테스트 위해서 토픽 자동으로 생성하도록 설정

management:
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL}
  tracing:
    sampling:
      probability: 1.0

slack:
  webhook:
    url: ${SLACK_WEBHOOK_URL}

logging:
  level:
    root: INFO
    com.trillionares.tryit: DEBUG
    org.springframework.web: DEBUG
    feign: DEBUG
    feign.Logger: DEBUG